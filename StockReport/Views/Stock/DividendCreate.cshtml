@model StockReport.Models.Dividend

@{
    ViewBag.Title = "DividendCreate";
}

<h2>DividendCreate</h2>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
@using (Ajax.BeginForm("CreateDividend", "Stock", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Dividend</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group hidden">
        @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StockId, "StockId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StockId", new SelectList(ViewBag.Stocks, "Id", "StockName"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StockId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DividendType, "DividendType", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("DividendType", (IEnumerable<SelectListItem>)ViewBag.DividendType, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StockId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Among, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Among, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Among, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "DividendList")
</div>
<script>
    function OnSuccess(data) {
        if (data == 'done') {
            CloseLity()
        }
        else {
            alert(data);
        }
    }
    function CloseLity() {
        parent.Lityclose();
    }
    function OnFailure(data) {
        alert('HTTP Status Code: ' + data);
    }
</script>
